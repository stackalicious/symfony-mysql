# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

#vconfig = YAML::load_file(“etc/users/” + ENV['USER'] +

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  #This is automatic for vbox provider
  config.vm.synced_folder "./", "/vagrant"
  
  config.vm.box = "dummy"
  
  {
    :local => {
      #:hostname => 'test.example.com',
      :ip       => '192.168.56.3',
      #:forwards => { 80 => 20080, 443 => 20443, },
      :vbox_custom => ["--memory", 1024],
      :environment => 'root platformd',
      :box      => 'opscode-ubuntu-12.04',
      :box_url      => 'https://opscode-vm-bento.s3.amazonaws.com/vagrant/opscode_ubuntu-12.04_provisionerless.box',
    },
    :remote => {
      #:hostname => 'proxy01.example.com',
      #:ip       => '192.168.231.10', #automatically assigned
      #:forwards => { 80 => 30280 },
      :environment => 'root platformd',
     },
  }.each do |name,cfg|
     
    config.vm.define name do |vm_config|
      #puts "box = " << cfg[:box] if cfg[:box]
      
      vm_config.vm.host_name = cfg[:hostname] if cfg[:hostname]
      vm_config.vm.network :private_network, ip: cfg[:ip] if cfg[:ip]
      vm_config.vm.box = cfg[:box] if cfg[:box]
      vm_config.vm.box_url = cfg[:box_url] if cfg[:box_url]
      
      #if cfg[:forwards]
      #  cfg[:forwards].each do |from,to|
      #    vm_config.vm.forward_port from, to
      #  end 
      #end
     
      #Ensure hostname exists w/in /etc/hosts
      updateHosts = <<HERE
      hostname=`hostname`; 
      if ! grep -qe "127\..*$hostname" /etc/hosts; then 
        echo \"127.0.0.1 $hostname\" | sudo tee -a /etc/hosts > /dev/null; 
      fi
HERE
      config.vm.provision "shell", inline: updateHosts

      $vbox_custom = ["modifyvm", :id] + (cfg[:vbox_custom] || []) 
      #if ! customize.include?("--name")
      #  # This adds the name of the box to the vm-name in 
      #  # VirtualBox so we can identify it easily in the GUI.
      #  customize += [ "--name", 
      #       File.basename(File.dirname(__FILE__)) + 
      #       "-#{name}" + "_#{Time.now.to_i}" 
      #  ]
      #end
      
      # You can adjust this part to 
      # whatever provisioning you use.      
      config.omnibus.chef_version = :latest
      config.vm.provision :chef_solo do |chef|
        chef.add_recipe "apt"
        chef.add_recipe "mysql"
        chef.add_recipe "mysql::server"

        chef.json = { 
        	# :apache => { :default_site_enabled => true }, 
          :mysql => { :server_root_password => "platformd",
                      :server_debian_password => "platformd",
                      :server_repl_password => "platformd",
                      :bind_address => "127.0.0.1" },
          # :campsite => { :db_password => "platformd" }
        }
        # chef.add_recipe "campsite"
      end

      config.vm.provision :shell do |shell|
        shell.path = "setup_env.sh"
        shell.args = cfg[:environment] if cfg[:environment]
      end 
    end
  
  end
  
  config.vm.provider :hp do |rs|
    hpConfig = YAML::load_file("hpConfig.yml")
    
    rs.access_key  = hpConfig['access_key']
    rs.secret_key = hpConfig['secret_key']
    rs.flavor   = hpConfig['flavor'] #"standard.small"
    rs.tenant_id = hpConfig['tenant_id']
    rs.server_name = hpConfig['server_name'] #"vagrant-test"
    rs.image    = hpConfig['image'] #"Ubuntu Precise 12.04 LTS Server 64-bit 20121026 (b)"
    rs.keypair_name = hpConfig['keypair_name'] #"vagrant2"
    rs.ssh_private_key_path = hpConfig['ssh_private_key_path'] #"~/.ssh/vagrant2.pem"
    rs.ssh_username = hpConfig['ssh_username'] #"ubuntu"
    rs.availability_zone = hpConfig['availability_zone'] #"us-west","us-east"
    # Security Groups defaults to ["default"]
    # rs.security_groups = ["group1", "group2"]
  end  
  
  config.vm.provider :virtualbox do |vb|
    vb.customize $vbox_custom
  end
  
end
